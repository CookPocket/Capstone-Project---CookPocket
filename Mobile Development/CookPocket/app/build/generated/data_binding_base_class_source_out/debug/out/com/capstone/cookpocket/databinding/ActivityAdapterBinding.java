// Generated by view binder compiler. Do not edit!
package com.capstone.cookpocket.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.capstone.cookpocket.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityAdapterBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final CardView cardViewRecipe;

  @NonNull
  public final TextView foodDescription;

  @NonNull
  public final TextView foodName;

  @NonNull
  public final ImageView img;

  @NonNull
  public final ConstraintLayout main;

  private ActivityAdapterBinding(@NonNull ConstraintLayout rootView,
      @NonNull CardView cardViewRecipe, @NonNull TextView foodDescription,
      @NonNull TextView foodName, @NonNull ImageView img, @NonNull ConstraintLayout main) {
    this.rootView = rootView;
    this.cardViewRecipe = cardViewRecipe;
    this.foodDescription = foodDescription;
    this.foodName = foodName;
    this.img = img;
    this.main = main;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityAdapterBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityAdapterBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_adapter, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityAdapterBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.cardViewRecipe;
      CardView cardViewRecipe = ViewBindings.findChildViewById(rootView, id);
      if (cardViewRecipe == null) {
        break missingId;
      }

      id = R.id.foodDescription;
      TextView foodDescription = ViewBindings.findChildViewById(rootView, id);
      if (foodDescription == null) {
        break missingId;
      }

      id = R.id.foodName;
      TextView foodName = ViewBindings.findChildViewById(rootView, id);
      if (foodName == null) {
        break missingId;
      }

      id = R.id.img;
      ImageView img = ViewBindings.findChildViewById(rootView, id);
      if (img == null) {
        break missingId;
      }

      ConstraintLayout main = (ConstraintLayout) rootView;

      return new ActivityAdapterBinding((ConstraintLayout) rootView, cardViewRecipe,
          foodDescription, foodName, img, main);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
